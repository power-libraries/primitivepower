package com.github.powerlibraries.primitive.collections;

import java.util.Collection;
import java.util.function.IntFunction;
{% if t.streamSupport %}import java.util.stream.{{t.label}}Stream;{% endif %}

public interface {{t.label}}Collection{{t.generic}} extends Collection<{{t.boxed}}>, {{t.label}}Iterable{{t.generic}} {

	boolean contains{{t.label}}({{t.type}} o);
	
	{{t.boxed}}[] toArray(IntFunction<{{t.boxed}}[]> p);

	{{t.arrayType}}[] to{{t.label}}Array();

	boolean add{{t.label}}({{t.type}} e);

	boolean remove{{t.label}}({{t.type}} o);

	boolean containsAll{{t.label}}s({{t.label}}Collection{{t.extendedGeneric}} c);

	boolean addAll{{t.label}}s({{t.label}}Collection{{t.extendedGeneric}} c);

	boolean removeAll{{t.label}}s({{t.label}}Collection{{t.extendedGeneric}} c);

	boolean retainAll{{t.label}}s({{t.label}}Collection{{t.extendedGeneric}} c);
	{% if t.streamSupport %}
	{{t.label}}Stream stream{{t.label}}s();

	{{t.label}}Stream parallelStream{{t.label}}s();
	{% endif %}
}